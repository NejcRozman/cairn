{"abi":[{"type":"function","name":"batchBurnFraction","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"tokenIDs","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"burnFraction","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"tokenID","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"isApprovedForAll","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"approved","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mergeFractions","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"tokenIDs","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mintClaim","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"units","type":"uint256","internalType":"uint256"},{"name":"uri","type":"string","internalType":"string"},{"name":"restrictions","type":"uint8","internalType":"enum IHypercertToken.TransferRestrictions"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"mintClaimWithFractions","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"units","type":"uint256","internalType":"uint256"},{"name":"fractions","type":"uint256[]","internalType":"uint256[]"},{"name":"uri","type":"string","internalType":"string"},{"name":"restrictions","type":"uint8","internalType":"enum IHypercertToken.TransferRestrictions"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"ownerOf","inputs":[{"name":"tokenID","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"owner","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"safeTransferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"id","type":"uint256","internalType":"uint256"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setApprovalForAll","inputs":[{"name":"operator","type":"address","internalType":"address"},{"name":"_approved","type":"bool","internalType":"bool"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"splitFraction","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"tokenID","type":"uint256","internalType":"uint256"},{"name":"_values","type":"uint256[]","internalType":"uint256[]"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"unitsOf","inputs":[{"name":"account","type":"address","internalType":"address"},{"name":"tokenID","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"units","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"unitsOf","inputs":[{"name":"tokenID","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"units","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"uri","inputs":[{"name":"tokenID","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"metadata","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"event","name":"ClaimStored","inputs":[{"name":"claimID","type":"uint256","indexed":true,"internalType":"uint256"},{"name":"uri","type":"string","indexed":false,"internalType":"string"},{"name":"totalUnits","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"batchBurnFraction(address,uint256[])":"eb568a14","burnFraction(address,uint256)":"f6b12293","isApprovedForAll(address,address)":"e985e9c5","mergeFractions(address,uint256[])":"c7b26c54","mintClaim(address,uint256,string,uint8)":"fda4823c","mintClaimWithFractions(address,uint256,uint256[],string,uint8)":"1e75a8b5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","splitFraction(address,uint256,uint256[])":"6ebd893f","unitsOf(address,uint256)":"1a2e9824","unitsOf(uint256)":"99f771a7","uri(uint256)":"0e89341c"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUnits\",\"type\":\"uint256\"}],\"name\":\"ClaimStored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIDs\",\"type\":\"uint256[]\"}],\"name\":\"batchBurnFraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"burnFraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"tokenIDs\",\"type\":\"uint256[]\"}],\"name\":\"mergeFractions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"units\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"enum IHypercertToken.TransferRestrictions\",\"name\":\"restrictions\",\"type\":\"uint8\"}],\"name\":\"mintClaim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"units\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"fractions\",\"type\":\"uint256[]\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"enum IHypercertToken.TransferRestrictions\",\"name\":\"restrictions\",\"type\":\"uint8\"}],\"name\":\"mintClaimWithFractions\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"splitFraction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"unitsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"units\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"unitsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"units\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"metadata\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"bitbeckers\",\"events\":{\"ClaimStored(uint256,string,uint256)\":{\"details\":\"Emitted when token with tokenID `claimID` is stored, with external data reference via `uri`.\"}},\"kind\":\"dev\",\"methods\":{\"batchBurnFraction(address,uint256[])\":{\"details\":\"Function to burn the tokens at `tokenIDs` for `account`\"},\"burnFraction(address,uint256)\":{\"details\":\"Function to burn the token at `tokenID` for `account`\"},\"mergeFractions(address,uint256[])\":{\"details\":\"Function called to merge tokens within `tokenIDs`.\"},\"mintClaim(address,uint256,string,uint8)\":{\"details\":\"Function called to store a claim referenced via `uri` with a maximum number of fractions `units`.\"},\"mintClaimWithFractions(address,uint256,uint256[],string,uint8)\":{\"details\":\"Function called to store a claim referenced via `uri` with a set of `fractions`.Fractions are internally summed to total units.\"},\"splitFraction(address,uint256,uint256[])\":{\"details\":\"Function called to split `tokenID` and transfer `to` into units declared in `values`.\"},\"unitsOf(address,uint256)\":{\"details\":\"Returns the `units` held by `account` of a (fractional) token at `claimID`If `tokenID` is a base type, the total amount of `units` held by `account` for the claim is returned.If `tokenID` is a fractional token, the `units` held by `account` the token is returned\"},\"unitsOf(uint256)\":{\"details\":\"Returns the `units` held by a (fractional) token at `claimID`If `tokenID` is a base type, the total amount of `units` for the claim is returned.If `tokenID` is a fractional token, the `units` held by the token is returned\"},\"uri(uint256)\":{\"details\":\"Returns the `uri` for metadata of the claim represented by `tokenID`Metadata must conform to { Hypercert Metadata } spec (based on ERC1155 Metadata)\"}},\"title\":\"Interface for hypercert token interactions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"batchBurnFraction(address,uint256[])\":{\"notice\":\"Operator must be allowed by `creator` and the tokens must represent the total amount of available units.\"},\"burnFraction(address,uint256)\":{\"notice\":\"Operator must be allowed by `creator` and the token must represent the total amount of available units.\"},\"mergeFractions(address,uint256[])\":{\"notice\":\"Tokens that have been merged are burned.\"},\"splitFraction(address,uint256,uint256[])\":{\"notice\":\"The sum of `values` must equal the current value of `_tokenID`.\"}},\"notice\":\"This interface declares the required functionality for a hypercert tokenThis interface does not specify the underlying token type (e.g. 721 or 1155)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/IHypercertToken.sol\":\"IHypercertToken\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/interfaces/IHypercertToken.sol\":{\"keccak256\":\"0x903c65c2ccaa66aae16c195a1c55c0734189e51f9500074f1325ca7465d6b672\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c9c07c890f1abf96b1d42358a8b1b5f375691e3557d0eefa5601390cc682c82\",\"dweb:/ipfs/QmWePExuQBwNANC3oGM29J3DUBYpCmqcqcE1XwYM91wRMz\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.20+commit.a1b79de6"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"claimID","type":"uint256","indexed":true},{"internalType":"string","name":"uri","type":"string","indexed":false},{"internalType":"uint256","name":"totalUnits","type":"uint256","indexed":false}],"type":"event","name":"ClaimStored","anonymous":false},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"tokenIDs","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"batchBurnFraction"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"tokenID","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"burnFraction"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"address","name":"approved","type":"address"}],"stateMutability":"view","type":"function","name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256[]","name":"tokenIDs","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"mergeFractions"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"units","type":"uint256"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"enum IHypercertToken.TransferRestrictions","name":"restrictions","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"mintClaim"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"units","type":"uint256"},{"internalType":"uint256[]","name":"fractions","type":"uint256[]"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"enum IHypercertToken.TransferRestrictions","name":"restrictions","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"mintClaimWithFractions"},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"}],"stateMutability":"view","type":"function","name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"safeTransferFrom"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"setApprovalForAll"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenID","type":"uint256"},{"internalType":"uint256[]","name":"_values","type":"uint256[]"}],"stateMutability":"nonpayable","type":"function","name":"splitFraction"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"tokenID","type":"uint256"}],"stateMutability":"view","type":"function","name":"unitsOf","outputs":[{"internalType":"uint256","name":"units","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"}],"stateMutability":"view","type":"function","name":"unitsOf","outputs":[{"internalType":"uint256","name":"units","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"tokenID","type":"uint256"}],"stateMutability":"view","type":"function","name":"uri","outputs":[{"internalType":"string","name":"metadata","type":"string"}]}],"devdoc":{"kind":"dev","methods":{"batchBurnFraction(address,uint256[])":{"details":"Function to burn the tokens at `tokenIDs` for `account`"},"burnFraction(address,uint256)":{"details":"Function to burn the token at `tokenID` for `account`"},"mergeFractions(address,uint256[])":{"details":"Function called to merge tokens within `tokenIDs`."},"mintClaim(address,uint256,string,uint8)":{"details":"Function called to store a claim referenced via `uri` with a maximum number of fractions `units`."},"mintClaimWithFractions(address,uint256,uint256[],string,uint8)":{"details":"Function called to store a claim referenced via `uri` with a set of `fractions`.Fractions are internally summed to total units."},"splitFraction(address,uint256,uint256[])":{"details":"Function called to split `tokenID` and transfer `to` into units declared in `values`."},"unitsOf(address,uint256)":{"details":"Returns the `units` held by `account` of a (fractional) token at `claimID`If `tokenID` is a base type, the total amount of `units` held by `account` for the claim is returned.If `tokenID` is a fractional token, the `units` held by `account` the token is returned"},"unitsOf(uint256)":{"details":"Returns the `units` held by a (fractional) token at `claimID`If `tokenID` is a base type, the total amount of `units` for the claim is returned.If `tokenID` is a fractional token, the `units` held by the token is returned"},"uri(uint256)":{"details":"Returns the `uri` for metadata of the claim represented by `tokenID`Metadata must conform to { Hypercert Metadata } spec (based on ERC1155 Metadata)"}},"version":1},"userdoc":{"kind":"user","methods":{"batchBurnFraction(address,uint256[])":{"notice":"Operator must be allowed by `creator` and the tokens must represent the total amount of available units."},"burnFraction(address,uint256)":{"notice":"Operator must be allowed by `creator` and the token must represent the total amount of available units."},"mergeFractions(address,uint256[])":{"notice":"Tokens that have been merged are burned."},"splitFraction(address,uint256,uint256[])":{"notice":"The sum of `values` must equal the current value of `_tokenID`."}},"version":1}},"settings":{"remappings":["@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/interfaces/IHypercertToken.sol":"IHypercertToken"},"evmVersion":"shanghai","libraries":{}},"sources":{"src/interfaces/IHypercertToken.sol":{"keccak256":"0x903c65c2ccaa66aae16c195a1c55c0734189e51f9500074f1325ca7465d6b672","urls":["bzz-raw://0c9c07c890f1abf96b1d42358a8b1b5f375691e3557d0eefa5601390cc682c82","dweb:/ipfs/QmWePExuQBwNANC3oGM29J3DUBYpCmqcqcE1XwYM91wRMz"],"license":"MIT"}},"version":1},"id":34}